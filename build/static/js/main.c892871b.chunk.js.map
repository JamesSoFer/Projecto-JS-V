{"version":3,"sources":["routes/StudentList.js","components/Navbar.js","components/Layout.js","components/Footer.js","components/AlertTag.js","hooks/useAlert.js","routes/StudentForm.js","routes/Student.js","App.js","reportWebVitals.js","index.js"],"names":["StudentList","props","useState","students","setStudents","isLoaded","setIsLoaded","useEffect","fetchStudents","fetch","process","method","headers","then","response","json","result","style","flex","map","student","className","hoverable","to","id","name","Navbar","borderBottom","width","position","top","left","background","display","alignItems","justifyContent","padding","maxHeight","margin","Layout","paddingTop","flexDirection","flexGrow","height","children","Footer","footer","color","alertContainer","document","querySelector","AlertTag","message","type","isOpened","onClose","success","ReactDOM","createPortal","onClick","e","target","parentElement","AlertContext","createContext","AlertProvider","setMessage","setType","setIsOpenned","setPosition","closeCount","setCloseCount","alertTimer","setTimeout","clearTimeout","Provider","value","sendAlert","useAlert","context","useContext","undefined","Error","StudentForm","idInput","setIdInput","nameInput","setNameInput","isLoading","setIsLoading","navigate","useNavigate","insertStudent","a","body","JSON","stringify","data","insert_students_one","catch","error","console","log","onSubmit","event","preventDefault","required","placeholder","onChange","disabled","Student","setStudent","params","useParams","StudentId","students_by_pk","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","getElementById"],"mappings":"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","file":"static/js/main.c892871b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction StudentList(props) {\n    const [students, setStudents] = useState([])\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    useEffect(()=>{\n        fetchStudents()\n    }, [isLoaded])\n\n    const fetchStudents = () => {\n        fetch(`${process.env.REACT_APP_API_URL}students`, {\n        method: 'GET',\n        headers: {\n            'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET\n        }\n        }).then(response => response.json())\n        .then(result => {\n            setIsLoaded(true)\n            setStudents(result.students)\n        })\n    }\n\n    if (!isLoaded) return <p>loading...</p>\n    \n    return (\n        <div style={{flex: \"1 0 auto\"}}>\n            <h1>Students List</h1>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                    </tr>\n                </thead>\n                <tbody >\n                    {\n                        students.map(student => \n                            <tr className={props.hoverable ? 'hoverable' : ''} key={student.id}>\n                                <td><Link to={`/student/${student.id}`}>{student.id}</Link></td>\n                                <td>{student.name}</td>\n                            </tr>\n                        )\n                    }\n                    <tr>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default StudentList","import React from \"react\";\nimport {Link} from 'react-router-dom'\n\nfunction Navbar() {\n    const navbar = {\n        borderBottom: \"1px var(--border) solid\", \n        width: \"100%\", \n        position: \"fixed\",\n        top: 0, \n        left: 0,\n        background: \"var(--background-alt)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        padding: \"16px\",\n        maxHeight: \"40px\"\n    }\n\n    return (\n        <div style={navbar}>\n            <Link style={{display:\"block\", margin: \"1rem\"}} to='/students'>\n                Students List\n            </Link>\n            <Link style={{display:\"block\", margin: \"1rem 0\"}} to='/addStudent'>\n                Add Student \n            </Link>\n        </div>\n    )\n}\n\nexport default Navbar","import React from \"react\";\n\nfunction Layout(props) {\n    return(\n        <div style={\n            {paddingTop: \"4rem\", \n            display:\"flex\", \n            flexDirection:\"column\",\n            flexGrow: 1, \n            height: \"calc(100vh - 5rem)\",\n            alignItems: \"stretch\"}\n        }>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout","import React from \"react\";\n\nfunction Footer(props) {\n    const footer = {\n        flex: \"0 0 auto\",\n        display: 'flex',\n        justifyContent: 'center',\n        background: props.color\n    }\n\n    return (\n        <div style={footer}>\n            <p>Made with ❤️ and ☕️</p>\n        </div>\n    )\n}\n\n\n\nexport default Footer","import react from 'react'\nimport ReactDOM from 'react-dom'\n\nconst alertContainer = document.querySelector(\"#alert-root\")\n\nconst AlertTag = ({ message, type, isOpened, onClose, success}) => {\n\n    if (!isOpened) return null\n    return ReactDOM.createPortal(\n            <div className={`alert ${type}`}>\n                <div className='Close' onClick={(e)=>{e.target.parentElement.style.display = 'none'}}> Close X </div>\n                <span>{message}</span>\n            </div>,\n        alertContainer\n    )\n}\n\nexport default AlertTag\n","import React from \"react\";\nimport { useContext, useState, useEffect, createContext } from \"react\";\nimport AlertTag from \"../components/AlertTag\";\n\nexport const AlertContext = createContext()\n\nexport const AlertProvider = ({ children }) => {\n    const [message, setMessage] = useState('')\n    const [type, setType] = useState('')\n    const [isOpened, setIsOpenned] = useState(false)\n    const [position, setPosition] = useState('right')\n    const [closeCount, setCloseCount] = useState(10000)\n    \n    const sendAlert = ({type, message, closeCount, position}) => {\n        setMessage(message)\n        setType(type)\n        setIsOpenned(true)\n        setCloseCount(!closeCount ? 10000:closeCount)\n        setPosition(!position ? 'right':position)\n    }\n\n    useEffect(() => {\n        const alertTimer = setTimeout(()=> {\n            setIsOpenned(false)\n        }\n        , closeCount)\n        return () => clearTimeout(alertTimer)\n        \n    })\n\n    return (\n        <AlertContext.Provider value={{ sendAlert, type, message, isOpened, position}}>\n            { children }\n        </AlertContext.Provider>\n    )\n}\n\nconst useAlert = () => {\n    const context = useContext(AlertContext)\n\n    if (context === undefined) {\n        throw new Error(\n            'You must wrap your application with <AlertProvider /> in order to useAlert().',\n        ) \n    }\n    return context\n}\n\nexport default useAlert","import { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router\"\nimport useAlert from \"../hooks/useAlert\"\n\nconst StudentForm = () => {\n    const [idInput, setIdInput] = useState()\n    const [nameInput, setNameInput] = useState('')\n    // const [alert, setAlert] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const navigate = useNavigate()\n    const { sendAlert } = useAlert()\n\n    const insertStudent = async (id, name) => {\n        setIsLoading(true)\n        return fetch(`${process.env.REACT_APP_API_URL}student`, {\n          method: 'POST',\n          headers: {\n            'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET\n          },\n          body: JSON.stringify({\"id\": id, \"name\": name})\n      }).then(response => response.json())\n      .then(data => {\n        setIsLoading(false)\n          if (data.insert_students_one === null)  {\n                sendAlert({type: 'warning', message: 'student is repeated'})\n            } else {\n              sendAlert({type: 'success', message: 'new student added'})\n                setIdInput(0)\n                setNameInput('')\n                navigate('/')\n            }\n      })\n       .catch(error => console.log(error))\n      }\n    \n      const handleSubmit = (event) => {\n        event.preventDefault()\n        insertStudent(idInput, nameInput)\n      }\n\n      // useEffect(() => {\n      //   const alertTimer = setTimeout(() => {\n      //       setAlert('')\n      //   }, 5000)\n      //   return () => clearTimeout(alertTimer)\n      // }, [alert])\n\n    return (\n        <>\n            <h1>Add Student</h1>\n            <form onSubmit={handleSubmit}>\n                <input required value={idInput} type=\"number\" name=\"id\" placeholder=\"id\" onChange={e => setIdInput(e.target.value)}></input>\n                <input required value={nameInput} type=\"text\" name=\"name\" placeholder=\"name\" onChange={e => setNameInput(e.target.value)}></input>\n                <button disabled={isLoading} type=\"submit\" value=\"submit\">{ isLoading ? 'Loading' : 'Add student'}</button>\n            </form>\n        </>\n    )\n}\n\nexport default StudentForm","import { useState } from \"react\"\nimport { useParams } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { useEffect } from \"react/cjs/react.development\"\n\nconst Student = () => {\n    const [student, setStudent] = useState({})\n    const [isLoaded, setIsLoaded] = useState(false)\n    const params = useParams()\n\n    const getStudentById = (id) => {\n        fetch(`${process.env.REACT_APP_API_URL}student/${id}`, {\n        method: 'GET',\n        headers: {\n            'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET\n        }\n        }).then(response => response.json())\n        .then(result => {\n            setIsLoaded(true)\n            setStudent(result.students_by_pk)\n        })\n    }\n\n    useEffect(()=>{\n        getStudentById(params.StudentId)\n    }, [isLoaded])\n    \n    if (!isLoaded) return <p>Loading...</p>\n\n    return (\n        <>\n            <h1>Student Profile</h1>\n            <Link to={`updateStudent/${params.StudentId}`}>Update Student</Link>\n            <hr />\n            <h2>Name:</h2>\n            <span>{student?.name}</span>\n            <h3>ID</h3>\n            <span>{params.StudentId}</span>\n        </>\n    )\n}\n\nexport default Student","import './App.css';\nimport React from 'react';\nimport StudentList from './routes/StudentList'\nimport Navbar from './components/Navbar';\nimport Layout from './components/Layout'\nimport Footer from './components/Footer';\nimport StudentForm from './routes/StudentForm';\nimport { Routes, Route } from 'react-router-dom'\nimport Student from './routes/Student';\nimport AlertTag from './components/AlertTag';\nimport useAlert from './hooks/useAlert';\n\nfunction App () {\n  const { type, message, isOpened } = useAlert()\n   return (\n     <>\n      <Layout>\n      <Navbar/>\n      <AlertTag isOpened={isOpened} type={type} message={message}/>\n      <Routes>\n          <Route path='/' element={<StudentList hoverable/>} />\n          <Route  path='/students' element={<StudentList hoverable />} />\n          <Route  path='/student/:StudentId' element={<Student />} />\n          <Route  path='/addStudent' element={<StudentForm />} />\n          <Route  path='/updateStudent/:StudentId' element={<StudentForm />} />\n          <Route path=\"*\" element={\n            <main style={{ padding: \"1rem\" }}>\n              <p>There's nothing here!</p>\n            </main>\n            }\n          />\n        </Routes>\n\n        <Footer />\n      </Layout>\n    </>\n    );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Routes} from 'react-router-dom'\nimport StudentList from './routes/StudentList'\nimport Student from './routes/Student'\nimport StudentForm from './routes/StudentForm'\nimport { AlertProvider } from './hooks/useAlert';\n\nReactDOM.render(\n  <BrowserRouter>\n    <AlertProvider>\n      <App />\n    </AlertProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}